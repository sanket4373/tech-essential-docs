{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This website is a space for me to document different technologies and tools that i have learned over the years in a systematic way","title":"Welcome"},{"location":"docker/install_run_docker/","text":"Commands to run on the VM Instance \u00b6 Install Docker $ sudo apt-get install docker.io Pull nginx image $ sudo docker pull nginx:1.10.0 Check Docker images $ sudo docker images REPOSITORY TAG IMAGE ID CREATED SIZE nginx 1.10.0 16666ff3a57f 3 years ago 183MB Run the first instance $ sudo docker run -d nginx:1.10.0 check that it's up and running $ sudo docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 370f8462ba56 nginx:1.10.0 \"nginx -g 'daemon of\u2026\" 5 seconds ago Up 4 seconds 80/tcp, 443/tcp thirsty_hugle Run a different version of nginx (if it's not available on your machine locally then docker will automatically pull it and then create a docker instance) sudo docker run -d nginx:1.9.3 Check how many instances are running $ sudo docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 3d3d3bcf8b5d nginx:1.9.3 \"nginx -g 'daemon of\u2026\" 20 seconds ago Up 19 seconds 80/tcp, 443/tcp infallible_goodall 370f8462ba56 nginx:1.10.0 \"nginx -g 'daemon of\u2026\" 42 seconds ago Up 41 seconds 80/tcp, 443/tcp thirsty_hugle $ sudo docker images REPOSITORY TAG IMAGE ID CREATED SIZE nginx 1.10.0 16666ff3a57f 3 years ago 183MB nginx 1.9.3 ea4b88a656c9 4 years ago 133MB What's with the container names? If you don't specify a name, Docker gives a container a random name, such as \"stoic_williams,\" \"sharp_bartik\" etc These are generated from a list of adjectives and names of famous scientists and hackers. https://github.com/moby/moby/blob/master/pkg/namesgenerator/names-generator.go","title":"Install run docker"},{"location":"docker/install_run_docker/#commands-to-run-on-the-vm-instance","text":"Install Docker $ sudo apt-get install docker.io Pull nginx image $ sudo docker pull nginx:1.10.0 Check Docker images $ sudo docker images REPOSITORY TAG IMAGE ID CREATED SIZE nginx 1.10.0 16666ff3a57f 3 years ago 183MB Run the first instance $ sudo docker run -d nginx:1.10.0 check that it's up and running $ sudo docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 370f8462ba56 nginx:1.10.0 \"nginx -g 'daemon of\u2026\" 5 seconds ago Up 4 seconds 80/tcp, 443/tcp thirsty_hugle Run a different version of nginx (if it's not available on your machine locally then docker will automatically pull it and then create a docker instance) sudo docker run -d nginx:1.9.3 Check how many instances are running $ sudo docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 3d3d3bcf8b5d nginx:1.9.3 \"nginx -g 'daemon of\u2026\" 20 seconds ago Up 19 seconds 80/tcp, 443/tcp infallible_goodall 370f8462ba56 nginx:1.10.0 \"nginx -g 'daemon of\u2026\" 42 seconds ago Up 41 seconds 80/tcp, 443/tcp thirsty_hugle $ sudo docker images REPOSITORY TAG IMAGE ID CREATED SIZE nginx 1.10.0 16666ff3a57f 3 years ago 183MB nginx 1.9.3 ea4b88a656c9 4 years ago 133MB What's with the container names? If you don't specify a name, Docker gives a container a random name, such as \"stoic_williams,\" \"sharp_bartik\" etc These are generated from a list of adjectives and names of famous scientists and hackers. https://github.com/moby/moby/blob/master/pkg/namesgenerator/names-generator.go","title":"Commands to run on the VM Instance"},{"location":"home/contributing/","text":"Installation \u00b6 To build and preview this site, you must have the following packages installed: mkdocs/mkdocs : the site generator squidfunk/mkdocs-material : the Material theme for MkDocs facelessuser/pymdown-extensions : a Python Markdown extension bundle If you don't want to install the packages locally, use the official Docker image , which includes everything you need to preview, build, and deploy the documentation site. docker pull squidfunk/mkdocs-material For more installation options, see http://squidfunk.github.io/mkdocs-material/ . Previewing docs \u00b6 Fork this repository. Start the live development server. docker run --rm -it -p 8000 :8000 -v ${ PWD } :/docs squidfunk/mkdocs-material Add new files and save your changes. Navigate to http://localhost:8000/ to review your updates. Publishing docs \u00b6 Open a pull request with your changes. After your PR is merged, build the static site files. docker run --rm -it -v ${ PWD } :/docs squidfunk/mkdocs-material build Deploy the documentation site to GitHub Pages. docker run --rm -it -v ~/.ssh:/root/.ssh -v ${ PWD } :/docs squidfunk/mkdocs-material gh-deploy","title":"Contributing"},{"location":"home/contributing/#installation","text":"To build and preview this site, you must have the following packages installed: mkdocs/mkdocs : the site generator squidfunk/mkdocs-material : the Material theme for MkDocs facelessuser/pymdown-extensions : a Python Markdown extension bundle If you don't want to install the packages locally, use the official Docker image , which includes everything you need to preview, build, and deploy the documentation site. docker pull squidfunk/mkdocs-material For more installation options, see http://squidfunk.github.io/mkdocs-material/ .","title":"Installation"},{"location":"home/contributing/#previewing-docs","text":"Fork this repository. Start the live development server. docker run --rm -it -p 8000 :8000 -v ${ PWD } :/docs squidfunk/mkdocs-material Add new files and save your changes. Navigate to http://localhost:8000/ to review your updates.","title":"Previewing docs"},{"location":"home/contributing/#publishing-docs","text":"Open a pull request with your changes. After your PR is merged, build the static site files. docker run --rm -it -v ${ PWD } :/docs squidfunk/mkdocs-material build Deploy the documentation site to GitHub Pages. docker run --rm -it -v ~/.ssh:/root/.ssh -v ${ PWD } :/docs squidfunk/mkdocs-material gh-deploy","title":"Publishing docs"},{"location":"networking/DNS/","text":"What is a Domain Name System? \u00b6 According to this article , The domain name system, more commonly known as \u201cDNS\u201d is the networking system in place that allows us to resolve human-friendly names to unique addresses. In short, DNS tranlates a hostname into an IP address for that host. A-Record: \u00b6 It is used to find the address of a computer connected to the internet from a name (domain name). In other words, The \"A\u201d record is used to map a host to an IPv4 IP address Domain Name ---> Registrar ---> IP Address If DNS goes down your site can't be reached by users. DNS records expires DNS is part of the security mechanism for HTTP which includes SSL encryption and cookie privacy DNS record have a TTL (Time to Live) which tells the caches on how long to cache them for The Resolver: \u00b6 The DNS client code is built into every OS. C-Name or FQDN: \u00b6 It is used to specify that a domain name is an alias for another domain. example www.github.com is an c-name or alias for github.com Search Domain: \u00b6 A setting in the resolver configuration that makes the resolver look up names inside a domain example of DNS worker in action: A record for www.google.com can be found on the name server for www.google.com . NS record for www.google.com resides in the com server which is a `gTLD (Global Top level Domain) The NS for .com are stored in the root servers","title":"DNS"},{"location":"networking/DNS/#what-is-a-domain-name-system","text":"According to this article , The domain name system, more commonly known as \u201cDNS\u201d is the networking system in place that allows us to resolve human-friendly names to unique addresses. In short, DNS tranlates a hostname into an IP address for that host.","title":"What is a Domain Name System?"},{"location":"networking/DNS/#a-record","text":"It is used to find the address of a computer connected to the internet from a name (domain name). In other words, The \"A\u201d record is used to map a host to an IPv4 IP address Domain Name ---> Registrar ---> IP Address If DNS goes down your site can't be reached by users. DNS records expires DNS is part of the security mechanism for HTTP which includes SSL encryption and cookie privacy DNS record have a TTL (Time to Live) which tells the caches on how long to cache them for","title":"A-Record:"},{"location":"networking/DNS/#the-resolver","text":"The DNS client code is built into every OS.","title":"The Resolver:"},{"location":"networking/DNS/#c-name-or-fqdn","text":"It is used to specify that a domain name is an alias for another domain. example www.github.com is an c-name or alias for github.com","title":"C-Name or FQDN:"},{"location":"networking/DNS/#search-domain","text":"A setting in the resolver configuration that makes the resolver look up names inside a domain example of DNS worker in action: A record for www.google.com can be found on the name server for www.google.com . NS record for www.google.com resides in the com server which is a `gTLD (Global Top level Domain) The NS for .com are stored in the root servers","title":"Search Domain:"},{"location":"networking/basic_concepts/","text":"All traffic on the internet is split-up into messages called packets packet is a short message sent from one computer to another. ping is simpler than HTTP, but HTTP is not based on ping In everyday softwares the HTTP layers is implemented by programs such as browsers and servers Lower layers such as TCP is implemented in the Operating System. nc command is a thin wrapper over TCP Layer Protols Concepts Application HTTP, SSH URLs, password Transport TCP, UDP port numbers, sessions Internet IP IP Address, routes Hardware wifi, ethernet, DSL signal strength, access points Each Top layer depends on the layer below it, however each layer functions independently and do not need worry about the layers below it ports distinguishes different applications/programs running on the same server. nc command is used to listen on to that port. The port range that a normal (non-root) user can listen on is 1024 through 65535. But if you use root access (including sudo) then you can listen on ports down to 1.","title":"Basic concepts"},{"location":"networking/commands_cheatsheet/","text":"List of some useful Networking commands \u00b6 1. IP Addr \u00b6 To get the depth information of your network interfaces like IP Address, MAC Address information, use the following command as shown below. https://www.tecmint.com/ip-command-examples/ ip addr show ip route show 2. netcat \u00b6 netcat or nc is a handy command to verify the connectivity to an ip or website from a client terminal $ nc -zv www.google.com 443 Connection to www.google.com 443 port [tcp/https] succeeded! all nc does not know anything about forming a HTTP request. All netcat (nc) does is connect to a server's port and send a string over it. To the server the request appears like a HTTP request and it sends a HTTP response. lsof is a utility that open files, including network sockets (listening or connected). Use sudo lsof -i to listen only network sockets 3. Dig (domain information groper): \u00b6 dig is a flexible tool for interrogating DNS name servers. It performs DNS lookups and displays the answers that are returned from the name server(s) that were queried. Most DNS administrators use dig to troubleshoot DNS problems because of its flexibility, ease of use and clarity of output. Other lookup tools tend to have less functionality than dig. 4. tcpdump: \u00b6 tcpdump prints out a description of the contents of packets on a network interface that match the boolean expression; the description is preceded by a time stamp printed, by default, as hours, minutes, seconds, and fractions of a second since midnight. example: to check network traffic from your host to some remote host. In terminal one session type the below command: sudo tcpdump -n host 8.8.8.8 In a second terminal session, run a ping to some network packet flowing in the first terminal one session: ping -c 3 8.8.8.8 5. traceroute: \u00b6 traceroute tracks the route packets taken from an IP network on their way to a given host. It utilizes the IP protocol's time to live (TTL) field and attempts to elicit an ICMP TIME_EXCEEDED response from each gateway along the path to the host. example: traceroute www.google.com 6. mtr: \u00b6 mtr combines the functionality of the traceroute and ping programs in a single network diagnostic tool. As mtr starts, it investigates the network connection between the host mtr runs on and HOSTNAME by sending packets with purposely low TTLs. It continues to send packets with low TTL, noting the response time of the intervening routers. This allows mtr to print the response percentage and response times of the internet route to HOSTNAME. A sudden increase in packet loss or response time is often an indication of a bad (or simply overloaded) link. The results are usually reported as round-trip-response times in miliseconds and the percentage of packetloss.","title":"Commands cheatsheet"},{"location":"networking/commands_cheatsheet/#list-of-some-useful-networking-commands","text":"","title":"List of some useful Networking commands"},{"location":"networking/commands_cheatsheet/#1-ip-addr","text":"To get the depth information of your network interfaces like IP Address, MAC Address information, use the following command as shown below. https://www.tecmint.com/ip-command-examples/ ip addr show ip route show","title":"1. IP Addr"},{"location":"networking/commands_cheatsheet/#2-netcat","text":"netcat or nc is a handy command to verify the connectivity to an ip or website from a client terminal $ nc -zv www.google.com 443 Connection to www.google.com 443 port [tcp/https] succeeded! all nc does not know anything about forming a HTTP request. All netcat (nc) does is connect to a server's port and send a string over it. To the server the request appears like a HTTP request and it sends a HTTP response. lsof is a utility that open files, including network sockets (listening or connected). Use sudo lsof -i to listen only network sockets","title":"2. netcat"},{"location":"networking/commands_cheatsheet/#3-dig-domain-information-groper","text":"dig is a flexible tool for interrogating DNS name servers. It performs DNS lookups and displays the answers that are returned from the name server(s) that were queried. Most DNS administrators use dig to troubleshoot DNS problems because of its flexibility, ease of use and clarity of output. Other lookup tools tend to have less functionality than dig.","title":"3. Dig (domain information groper):"},{"location":"networking/commands_cheatsheet/#4-tcpdump","text":"tcpdump prints out a description of the contents of packets on a network interface that match the boolean expression; the description is preceded by a time stamp printed, by default, as hours, minutes, seconds, and fractions of a second since midnight. example: to check network traffic from your host to some remote host. In terminal one session type the below command: sudo tcpdump -n host 8.8.8.8 In a second terminal session, run a ping to some network packet flowing in the first terminal one session: ping -c 3 8.8.8.8","title":"4. tcpdump:"},{"location":"networking/commands_cheatsheet/#5-traceroute","text":"traceroute tracks the route packets taken from an IP network on their way to a given host. It utilizes the IP protocol's time to live (TTL) field and attempts to elicit an ICMP TIME_EXCEEDED response from each gateway along the path to the host. example: traceroute www.google.com","title":"5. traceroute:"},{"location":"networking/commands_cheatsheet/#6-mtr","text":"mtr combines the functionality of the traceroute and ping programs in a single network diagnostic tool. As mtr starts, it investigates the network connection between the host mtr runs on and HOSTNAME by sending packets with purposely low TTLs. It continues to send packets with low TTL, noting the response time of the intervening routers. This allows mtr to print the response percentage and response times of the internet route to HOSTNAME. A sudden increase in packet loss or response time is often an indication of a bad (or simply overloaded) link. The results are usually reported as round-trip-response times in miliseconds and the percentage of packetloss.","title":"6. mtr:"}]}